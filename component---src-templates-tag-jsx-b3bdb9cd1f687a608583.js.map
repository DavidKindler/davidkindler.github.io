{"version":3,"sources":["webpack:///./src/templates/tag.jsx"],"names":["TagTemplate","render","postEdges","this","props","data","allMarkdownRemark","edges","title","config","siteTitle","pageContext","tag","React","Component","pageQuery"],"mappings":"gRAWqBA,E,gLACnBC,OAAA,WACE,IAAMC,EAAYC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAGpD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAOC,IAAOC,YACtB,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,gDAAsBP,KAAKC,MAAMO,YAAYC,IAA7C,KACA,kBAAC,IAAD,CAAaV,UAAWA,O,GAXOW,IAAMC,WAiClCC,EAAS","file":"component---src-templates-tag-jsx-b3bdb9cd1f687a608583.js","sourcesContent":["import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../layout'\r\nimport PostListing from '../components/PostListing'\r\nimport Wrapper from '../components/Wrapper'\r\nimport SEO from '../components/SEO'\r\n// import Pagination from '../components/Pagination'\r\n\r\nimport config from '../../data/SiteConfig'\r\n\r\nexport default class TagTemplate extends React.Component {\r\n  render () {\r\n    const postEdges = this.props.data.allMarkdownRemark.edges\r\n    // const { currentPageNum, pageCount } = this.props.pageContext\r\n\r\n    return (\r\n      <Layout>\r\n        <Helmet title={config.siteTitle} />\r\n        <SEO />\r\n        <Wrapper>\r\n          <h1>Posts tagged as \"{this.props.pageContext.tag}\"</h1>\r\n          <PostListing postEdges={postEdges} />\r\n        </Wrapper>\r\n        {/* {this.renderPaging()} */}\r\n        {/* <Pagination nbPages={pageCount} currentPage={currentPageNum} /> */}\r\n      </Layout>\r\n    )\r\n\r\n    // const { tag } = this.props.pageContext\r\n    // const postEdges = this.props.data.allMarkdownRemark.edges\r\n    // return (\r\n    //   <Layout>\r\n    //     <div className='tag-container'>\r\n    //       <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\r\n    //       <PostListing postEdges={postEdges} />\r\n    //       tag page\r\n    //     </div>\r\n    //   </Layout>\r\n    // )\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query TagPage($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [fields___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}