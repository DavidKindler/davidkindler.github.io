{"version":3,"sources":["webpack:///./src/components/Pagination/index.jsx","webpack:///./src/templates/listing.jsx","webpack:///./src/components/Hero/index.js","webpack:///./src/components/PostListItem/index.jsx","webpack:///./src/components/PostListing/index.jsx"],"names":["PaginationWrapper","styled","nav","PageBtn","Link","colors","primary","textLightest","PreviousBtn","NextBtn","Spacer","span","PageInfo","Pagination","render","this","props","currentPage","nbPages","previousUrl","to","className","React","Component","Listing","postEdges","data","allMarkdownRemark","edges","pageContext","currentPageNum","pageCount","title","config","siteTitle","SEO","Hero","subTitle","description","Wrapper","PostListing","listingQuery","HeroContainer","div","TitleContainer","HeroTitle","h1","white","HeroSubTitle","h2","siteCover","useSiteMetadata","fluid","useSiteImages","heroImg","src","style","backgroundImage","Post","article","ReadPost","primaryAlpha","PostDate","time","textLight","PostHeader","header","Excerpt","PostTitleLink","PostsListItem","excerpt","slug","date","tags","dangerouslySetInnerHTML","__html","PostTags","icon","aria-label","getPostList","postList","forEach","postEdge","push","node","fields","frontmatter","cover","timeToRead","map","post","key"],"mappings":"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","file":"component---src-templates-listing-jsx-df317885edf77c0f8ce6.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { colors } from '../../tokens'\n\nconst PaginationWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 4em;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 770px;\n  padding: 25px 0;\n  margin: 0px auto;\n\n  @media (max-width: 780px) {\n    width: 90%;\n    padding: 25px 0;\n  }\n`\n\nconst PageBtn = styled(Link)`\n  border-radius: 3px;\n  background-color: ${colors.primary};\n  border: 1px solid ${colors.primary};\n  color: ${colors.textLightest};\n  padding: 8px 20px;\n  min-width: 130px;\n\n  &:hover {\n    background-color: ${colors.textLightest};\n    color: ${colors.primary};\n    border: 1px solid ${colors.primary};\n  }\n\n  @media (max-width: 564px) {\n    margin-top: 10px;\n    width: 100%;\n  }\n`\n\nconst PreviousBtn = styled(PageBtn)`\n  order: 1;\n  @media (max-width: 564px) {\n    order: 2;\n  }\n`\n\nconst NextBtn = styled(PageBtn)`\n  order: 3;\n`\n\nconst Spacer = styled.span`\n  display: block;\n  min-width: 130px;\n\n  &.previous {\n    order: 1;\n  }\n\n  &.next {\n    order: 3;\n  }\n\n  @media (max-width: 564px) {\n    display: none;\n\n    &.previous {\n      order: 2;\n    }\n\n    &.next {\n      order: 3;\n    }\n  }\n`\n\nconst PageInfo = styled.span`\n  order: 2;\n  padding: 1em 0;\n  @media (max-width: 564px) {\n    order: 1;\n  }\n`\n\nclass Pagination extends React.Component {\n  render () {\n    const { currentPage, nbPages } = this.props\n    const previousUrl = currentPage === 2 ? '/' : currentPage - 1\n\n    return (\n      <PaginationWrapper>\n        {currentPage !== 1 ? (\n          <PreviousBtn to={`/${previousUrl}`}>‹ Newer posts</PreviousBtn>\n        ) : (\n          <Spacer className='previous' />\n        )}\n\n        <PageInfo>\n          Page {currentPage} of {nbPages}\n        </PageInfo>\n\n        {currentPage < nbPages ? (\n          <NextBtn to={`/${currentPage + 1}`}>Older posts ›</NextBtn>\n        ) : (\n          <Spacer className='next' />\n        )}\n      </PaginationWrapper>\n    )\n  }\n}\n\nexport default Pagination\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport Wrapper from '../components/Wrapper'\nimport SEO from '../components/SEO'\nimport Hero from '../components/Hero'\nimport Pagination from '../components/Pagination'\nimport config from '../../data/siteConfig'\n// import './listing.css'\n\nclass Listing extends React.Component {\n  // renderPaging () {\n  //   const { currentPageNum, pageCount } = this.props.pageContext\n  //   const prevPage = currentPageNum - 1 === 1 ? '/' : `/${currentPageNum - 1}/`\n  //   const nextPage = `/${currentPageNum + 1}/`\n  //   const isFirstPage = currentPageNum === 1\n  //   const isLastPage = currentPageNum === pageCount\n\n  //   return (\n  //     <>\n  //       {!isFirstPage && <Link to={prevPage}>Previous</Link>}\n  //       {[...Array(pageCount)].map((_val, index) => {\n  //         const pageNum = index + 1\n  //         return (\n  //           <Link\n  //             key={`listing-page-${pageNum}`}\n  //             to={pageNum === 1 ? '/' : `/${pageNum}/`}\n  //           >\n  //             {pageNum}\n  //           </Link>\n  //         )\n  //       })}\n  //       {!isLastPage && <Link to={nextPage}>Next</Link>}\n  //     </>\n  //   )\n  // }\n\n  render () {\n    const postEdges = this.props.data.allMarkdownRemark.edges\n    const { currentPageNum, pageCount } = this.props.pageContext\n\n    return (\n      <Layout>\n        <Helmet title={config.siteTitle} />\n        <SEO />\n        <Hero title={config.siteTitle} subTitle={config.description} />\n        <Wrapper>\n          <PostListing postEdges={postEdges} />\n        </Wrapper>\n        {/* {this.renderPaging()} */}\n        <Pagination nbPages={pageCount} currentPage={currentPageNum} />\n      </Layout>\n    )\n  }\n}\n\nexport default Listing\n\n/* eslint no-undef: \"off\" */\nexport const listingQuery = graphql`\n  query ListingQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [fields___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"//content/posts//\" } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover {\n              publicURL\n            }\n            date\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport useSiteMetadata from '../../hooks/use-site-config'\nimport useSiteImages from '../../hooks/use-site-images'\nimport { colors } from '../../tokens'\n\nconst HeroContainer = styled.div`\n  position: relative;\n  display: table;\n  width: 100%;\n  height: 400px;\n  overflow: hidden;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`\n\nconst TitleContainer = styled.div`\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n  width: 100%;\n`\n\nconst HeroTitle = styled.h1`\n  font-weight: 700;\n  font-size: 3rem;\n  margin: 10px 60px;\n  color: ${colors.white};\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst HeroSubTitle = styled.h2`\n  margin: 10px 60px;\n  color: ${colors.white};\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst Hero = props => {\n  const { siteCover } = useSiteMetadata()\n  const { fluid } = useSiteImages(siteCover)\n  const heroImg = props.heroImg || fluid.src\n\n  return (\n    <HeroContainer style={{ backgroundImage: `url(\"${heroImg}\")` }}>\n      <TitleContainer>\n        <HeroTitle>{props.title}</HeroTitle>\n        {props.subTitle && <HeroSubTitle>{props.subTitle}</HeroSubTitle>}\n      </TitleContainer>\n    </HeroContainer>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport PostTags from '../PostTags'\n// import useSiteMetadata from '../../hooks/use-site-config'\n// import Article from '../Article'\nimport styled from 'styled-components'\nimport { colors } from '../../tokens'\n\nconst Post = styled.article`\n  border-bottom: 1px solid rgba(214, 209, 230, 0.5);\n  padding-bottom: 1.25rem;\n`\n\nconst ReadPost = styled(Link)`\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  line-height: 2;\n  color: ${colors.primary};\n\n  &:hover {\n    background-color: ${colors.primaryAlpha};\n    border-radius: 0.25rem;\n    color: ${colors.textLightest};\n  }\n`\n\nconst PostDate = styled.time`\n  color: ${colors.textLight};\n  &:before {\n    content: '🗓';\n    margin-right: 0.2rem;\n  }\n`\n\nconst PostHeader = styled.header`\n  padding: 1em 0;\n`\n\nconst Excerpt = styled(Link)`\n  display: block;\n  line-height: 1.45;\n  margin-bottom: 0.5em;\n  &:hover {\n    background-color: ${colors.primary};\n    color: ${colors.textLightest};\n    opacity: 0.7;\n  }\n`\n\nconst PostTitleLink = styled(Link)`\n  color: ${colors.primary};\n  &:hover {\n    border-bottom: 1px dotted ${colors.primary};\n  }\n`\n\nconst PostsListItem = props => {\n  const { title, excerpt, slug, date, tags } = props\n  // const { multilangPosts } = useSiteMetadata()\n\n  return (\n    <Post>\n      <PostHeader>\n        <h2>\n          <PostTitleLink to={slug}>{title}</PostTitleLink>\n        </h2>\n      </PostHeader>\n      <section>\n        <Excerpt to={slug} dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </section>\n      {/* <Article post={props} /> */}\n      <footer>\n        <PostTags tags={tags} icon={true} />\n        <PostDate>{date}</PostDate>\n        <ReadPost to={slug} aria-label={`View ${title} article`}>\n          Read post ›\n        </ReadPost>\n      </footer>\n    </Post>\n  )\n}\nexport default PostsListItem\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport PostsListItem from '../PostListItem'\n\nclass PostListing extends React.Component {\n  getPostList () {\n    const postList = []\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        slug: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      })\n    })\n    return postList\n  }\n\n  render () {\n    const postList = this.getPostList()\n    return (\n      <>\n        {/* Your post list here. */\n        postList.map(post => {\n          // <Link to={post.path} key={post.title}>\n          //   <h1>{post.title}</h1>\n          // </Link>\n          return <PostsListItem key={post.title} {...post} />\n        })}\n      </>\n    )\n  }\n}\n\nexport default PostListing\n"],"sourceRoot":""}