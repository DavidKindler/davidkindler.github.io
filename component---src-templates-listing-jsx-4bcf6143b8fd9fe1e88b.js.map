{"version":3,"sources":["webpack:///./src/templates/listing.jsx"],"names":["Listing","renderPaging","this","props","pageContext","currentPageNum","pageCount","prevPage","nextPage","isFirstPage","isLastPage","className","to","Array","map","_val","index","pageNum","key","render","postEdges","data","allMarkdownRemark","edges","title","config","siteTitle","React","Component","listingQuery"],"mappings":"+mBASMA,E,wLACJC,aAAA,WAAiB,IAAD,EACwBC,KAAKC,MAAMC,YAAzCC,EADM,EACNA,eAAgBC,EADV,EACUA,UAClBC,EAAWF,EAAiB,GAAM,EAAI,IAA3B,KAAqCA,EAAiB,GAAtD,IACXG,EAAQ,KAAOH,EAAiB,GAAxB,IACRI,EAAiC,IAAnBJ,EACdK,EAAaL,IAAmBC,EAEtC,OACE,yBAAKK,UAAU,qBACXF,GAAe,kBAAC,OAAD,CAAMG,GAAIL,GAAV,YAChB,EAAIM,MAAMP,IAAYQ,KAAI,SAACC,EAAMC,GAChC,IAAMC,EAAUD,EAAQ,EACxB,OACE,kBAAC,OAAD,CACEE,IAAG,gBAAkBD,EACrBL,GAAgB,IAAZK,EAAgB,IAAhB,IAA0BA,EAA1B,KAEHA,OAILP,GAAc,kBAAC,OAAD,CAAME,GAAIJ,GAAV,U,EAKtBW,OAAA,WACE,IAAMC,EAAYlB,KAAKC,MAAMkB,KAAKC,kBAAkBC,MAEpD,OACE,kBAAC,IAAD,KACE,yBAAKZ,UAAU,qBACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAQa,MAAOC,IAAOC,YACtB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaN,UAAWA,KAEzBlB,KAAKD,kB,GAtCM0B,IAAMC,WA6Cb5B,YAGR,IAAM6B,EAAY","file":"component---src-templates-listing-jsx-4bcf6143b8fd9fe1e88b.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing/PostListing'\nimport SEO from '../components/SEO'\nimport config from '../../data/SiteConfig'\nimport './listing.css'\n\nclass Listing extends React.Component {\n  renderPaging () {\n    const { currentPageNum, pageCount } = this.props.pageContext\n    const prevPage = currentPageNum - 1 === 1 ? '/' : `/${currentPageNum - 1}/`\n    const nextPage = `/${currentPageNum + 1}/`\n    const isFirstPage = currentPageNum === 1\n    const isLastPage = currentPageNum === pageCount\n\n    return (\n      <div className='paging-container'>\n        {!isFirstPage && <Link to={prevPage}>Previous</Link>}\n        {[...Array(pageCount)].map((_val, index) => {\n          const pageNum = index + 1\n          return (\n            <Link\n              key={`listing-page-${pageNum}`}\n              to={pageNum === 1 ? '/' : `/${pageNum}/`}\n            >\n              {pageNum}\n            </Link>\n          )\n        })}\n        {!isLastPage && <Link to={nextPage}>Next</Link>}\n      </div>\n    )\n  }\n\n  render () {\n    const postEdges = this.props.data.allMarkdownRemark.edges\n\n    return (\n      <Layout>\n        <div className='listing-container'>\n          <div className='posts-container'>\n            <Helmet title={config.siteTitle} />\n            <SEO />\n            <PostListing postEdges={postEdges} />\n          </div>\n          {this.renderPaging()}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Listing\n\n/* eslint no-undef: \"off\" */\nexport const listingQuery = graphql`\n  query ListingQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [fields___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}